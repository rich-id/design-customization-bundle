{% set designCustomizationPrefix = getDesignCustomizationPrefix() %}

{%
    set hexaOpacities = {
        100: 'FF',
        95: 'F2',
        90: 'E6',
        85: 'D9',
        80: 'CC',
        75: 'BF',
        70: 'B3',
        65: 'A6',
        60: '99',
        55: '8C',
        50: '80',
        45: '73',
        40: '66',
        35: '59',
        30: '4D',
        25: '40',
        20: '33',
        15: '26',
        10: '1A',
        5: '0D',
        4: '0A',
        3: '08',
        2: '05',
        1: '03',
    }
%}

{%
    set bootsrapItems = {
        'switch-point': 'data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'><circle r=\'3\' fill=\'%color%\'/></svg>',
        'radio-point': 'data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'><circle r=\'2.3\' fill=\'%color%\'/></svg>',
        'select-arrow': 'data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' height=\'24px\' viewBox=\'0 0 24 24\' width=\'24px\' fill=\'%color%\'><path d=\'M24 24H0V0h24v24z\' fill=\'none\'/><path d=\'M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z\'/></svg>',
}
%}

<style type="text/css">
    :root {
    {% for configuration in getDesignConfigurations(['color', 'radius', 'font']) %}
        --{{ designCustomizationPrefix }}-{{ configuration.slug }}: {{ configuration.valueToUse }};

        {% if opacities is defined and opacities[configuration.slug] is defined %}
            {% for opacity in opacities[configuration.slug] %}
                {% if hexaOpacities[opacity] is defined %}
                    --{{ designCustomizationPrefix }}-{{ configuration.slug }}-{{ opacity }}: {{ configuration.valueToUse ~ hexaOpacities[opacity] }};
                {% endif %}
            {% endfor %}
        {% endif %}

        {% if bootstrap is defined and bootstrap[configuration.slug] is defined %}
            {% for bootstrapItem in bootstrap[configuration.slug] %}
                {% if bootsrapItems[bootstrapItem] is defined %}
                    --{{ designCustomizationPrefix }}-{{ configuration.slug }}-{{ bootstrapItem }}: url("{{ bootsrapItems[bootstrapItem]|replace({'%color%': configuration.valueToUse|url_encode })|raw }}");
            {% endif %}
            {% endfor %}
        {% endif %}
    {% endfor %}
    }
</style>
